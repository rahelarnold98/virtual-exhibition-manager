/**
 * Cineast RESTful API
 * Cineast is vitrivr's content-based multimedia retrieval engine. This is it's RESTful API.
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@vitrivr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.models

import com.squareup.moshi.Json

/**
 *
 * @param containers
 * @param config
 * @param components
 * @param messageType
 */

data class SimilarityQuery(
    @Json(name = "containers")
    val containers: kotlin.collections.List<QueryComponent>? = null,
    @Json(name = "config")
    val config: QueryConfig? = null,
    @Json(name = "components")
    val components: kotlin.collections.List<QueryComponent>? = null,
    @Json(name = "messageType")
    val messageType: SimilarityQuery.MessageType? = null
) {

    /**
     *
     * Values: pING,qSIM,qMLT,qNESEG,qSEG,mLOOKUP,qTEMPORAL,sESSIONSTART,qRSTART,qREND,qRERROR,qROBJECT,qRMETADATAO,qRMETADATAS,qRSEGMENT,qRSIMILARITY
     */
    enum class MessageType(val value: kotlin.String) {
        @Json(name = "PING")
        pING("PING"),

        @Json(name = "Q_SIM")
        qSIM("Q_SIM"),

        @Json(name = "Q_MLT")
        qMLT("Q_MLT"),

        @Json(name = "Q_NESEG")
        qNESEG("Q_NESEG"),

        @Json(name = "Q_SEG")
        qSEG("Q_SEG"),

        @Json(name = "M_LOOKUP")
        mLOOKUP("M_LOOKUP"),

        @Json(name = "Q_TEMPORAL")
        qTEMPORAL("Q_TEMPORAL"),

        @Json(name = "SESSION_START")
        sESSIONSTART("SESSION_START"),

        @Json(name = "QR_START")
        qRSTART("QR_START"),

        @Json(name = "QR_END")
        qREND("QR_END"),

        @Json(name = "QR_ERROR")
        qRERROR("QR_ERROR"),

        @Json(name = "QR_OBJECT")
        qROBJECT("QR_OBJECT"),

        @Json(name = "QR_METADATA_O")
        qRMETADATAO("QR_METADATA_O"),

        @Json(name = "QR_METADATA_S")
        qRMETADATAS("QR_METADATA_S"),

        @Json(name = "QR_SEGMENT")
        qRSEGMENT("QR_SEGMENT"),

        @Json(name = "QR_SIMILARITY")
        qRSIMILARITY("QR_SIMILARITY");
    }
}

