package ch.unibas.dmi.dbis.vrem.rest

import io.javalin.plugin.json.JsonMapper
import kotlinx.serialization.ExperimentalSerializationApi
import kotlinx.serialization.KSerializer
import kotlinx.serialization.json.Json
import kotlinx.serialization.serializer
import org.litote.kmongo.id.serialization.IdKotlinXSerializationModule

@ExperimentalSerializationApi
object KotlinXJsonMapper: JsonMapper {
    override fun <T> fromJsonString(json: String, targetClass: Class<T>): T {
        @Suppress("UNCHECKED_CAST")
        val deserializer = serializer(targetClass) as KSerializer<T>
        val jsonObj = Json {
            serializersModule = IdKotlinXSerializationModule // To properly deserialize IDs.
            coerceInputValues = true // Use default values if key not provided.
        }
        return jsonObj.decodeFromString(deserializer, json)
    }

    override fun toJsonString(obj: Any): String {
        val serializer = serializer(obj::class.java)
        val jsonObj = Json {
            serializersModule = IdKotlinXSerializationModule // To properly serialize IDs.
            encodeDefaults = true // Don't omit values generated by default.
        }
        return jsonObj.encodeToString(serializer, obj)
    }
}
