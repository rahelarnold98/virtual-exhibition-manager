plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.10'
    id 'org.openapi.generator' version '5.1.1'
    id 'java'
    id 'application'
    id 'idea'
}

// Allow custom specification of Cineast OpenAPI config via -PapiConfigPath=...
def apiConfigPath = project.properties["apiConfigPath"] ?: "$rootDir/cineast.json"

// Source/Target compatibility (currently used for source & target/JVM).
def javaCompatibility = 11

// Project settings.
group 'ch.unibas.dmi.dbis'
version '2.0.0-SNAPSHOT'

// Main class.
mainClassName = 'ch.unibas.dmi.dbis.vrem.VREMKt'

// Java properties.
java {
    sourceCompatibility = javaCompatibility
    targetCompatibility = javaCompatibility
}

// Application properties.
application {
    applicationDefaultJvmArgs = ["-Xms2G", "-Xmx4G"]
}

// Add generated code to sources.
sourceSets {
    main {
        java {
            srcDirs += "$buildDir/generated/src/main/kotlin/"
        }
    }
}

// Jar properties.
jar {
    manifest {
        attributes 'Version': archiveVersion.get()
        attributes 'Main-Class': mainClassName // Same as for the application plugin.
        attributes 'Manifest-Version': '1.0'
        attributes 'Multi-Release': true
    }

    // Gradle 7.0 requires a duplicate handling strategy or fails if duplicates occur.
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// Generate Cineast OpenAPI bindings.
task generateOpenApi(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = 'kotlin'
    inputSpec = apiConfigPath
    packageName = "ch.unibas.dmi.dbis.vrem.cineast.client"
    outputDir = "$buildDir/generated"

    skipValidateSpec = true

    configOptions = [
            enumPropertyNaming: "UPPERCASE"
    ]
}

task copyResources {
    doLast {
        copy {
            from "config.json"
            into "$buildDir/libs/"
        }
    }
}

task deploy {
    dependsOn clean, generateOpenApi, build, copyResources
}

// Regenerate OpenAPI code before building.
compileKotlin {
    mustRunAfter generateOpenApi
    dependsOn generateOpenApi
    kotlinOptions.jvmTarget = javaCompatibility
}

compileTestKotlin {
    mustRunAfter generateOpenApi
    dependsOn generateOpenApi
    kotlinOptions.jvmTarget = javaCompatibility
}

// Regenerate OpenAPI code upon cleaning.
clean {
    finalizedBy generateOpenApi
}

// IntelliJ properties.
idea {
    module {
        // IntelliJ should download Javadoc.
        downloadJavadoc = true

        // Exclude directories from IntelliJ (indexing etc.).
        excludeDirs += file("data")
        excludeDirs += file("logs")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Align versions of all Kotlin components.
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // CLI.
    implementation group: 'com.github.ajalt', name: 'clikt', version: '2.8.0'

    // Kotlinx Serialization.
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-serialization-json', version: '1.2.1'

    // KMongo.
    implementation group: 'org.litote.kmongo', name: 'kmongo-serialization', version: '4.2.7'
    implementation group: 'org.litote.kmongo', name: 'kmongo-id-serialization', version: '4.2.7'

    // Javalin.
    implementation group: 'io.javalin', name: 'javalin', version: '3.13.7'

    // Fuel.
    implementation group: 'com.github.kittinunf.fuel', name: 'fuel', version: '2.3.1'
    implementation group: 'com.github.kittinunf.fuel', name: 'fuel-kotlinx-serialization', version: '2.3.1'

    // OpenAPI Dependencies (OkHttp3 and Moshi Serialization).
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.0'
    implementation group: 'com.squareup.moshi', name: 'moshi-kotlin', version: '1.11.0'

    // Logging.
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'

    // Kotlin.
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: '1.5.10'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.5.10'

    // Kotlin test & JUnit library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}
